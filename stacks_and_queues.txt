Provide all the code and written answers in a file named stacks_and_queues.txt:

What is the main difference between a stack and a queue?

A stack arranges data in a Last in First out data priority. A queue arranges data in a first in first out data priority.

What are the similarities between stacks and queues?

Both are data structures where elements are stored (put in) and retrieved (taken out).

Imagine you are an engineer tasked with implementing the UNDO and REDO options in a word processor such as Microsoft Word. Which data structure would you use for each option and why?

UNDO: I would use a stack data structure because the latest entry would need to also be the first to leave.
REDO: I would use stack for this as well because the latest entry would still need to be the one that would need to be altered.

Programming Questions
You may program the following question in any language of your choice. Before you begin coding, write out a plan as to how you will solve the question.

Given a string, reverse it using a stack. For example, the string "Bloc!" should be converted to "!colB".

FUNCTION REVERSE(original)
  INIT a new stack
  FOR each character in original
    CALL stack.push WITH character
  END FOR
  INIT reversed to empty string
  WHILE stack is not empty
    CALL stack.pop RETURNING character
    APPEND character to reversed
  END WHILE
  RETURN reversed
END FUNCTION

reverse("Bloc")
#=> "colB"

console.log("Bloc".split("").reverse().join(""));

Implement the pop method of a stack using one queue.

FUNCTION ArrayWithPopMethod(original)
  INIT a new stack
  FOR each new character
    CALL stack.push RETURNING updated array
  FOR each character in original
    CALL stack.pop RETURNING updated array
  END FOR

var stack = [];
stack.push(2);
stack.push(5);
var popExample= stack.pop();
console.log((popExample));

Make a FIFO data structure mirror the functionality of a LIFO data structure.
Since the internal list is not the same as defined in the checkpoint, it may help to rewrite the pseudocode first.

FUNCTION ArrayWithFIFOMethod(original)
  INIT a new stack
  FOR each new character
    CALL stack.push RETURNING updated array
  FOR each character in original
    CALL stack.unshift RETURNING updated array
  END FOR

  var stack = [];

  function addToBeginning(){
    stack.push(2);
    stack.push(5);
    stack.unshift(3);
    stack.unshift(4);
    stack.shift()
    return stack;
  }

  console.log(addToBeginning());


To delete an item, take all of the elements in the queue one at a time and put them at the end of the queue,
except for the last one which should be removed and returned.

Implement the enqueue and dequeue methods defined in the checkpoint inside your own Queue class.

FUNCTION createQUEUE (value)
  INIT new queue
    REMOVE value from INDEX OF 0
    ADD value to END
  RETURN length
END FOR

class Queue
  def initialize
    @list = Array.new
  end

  def enqueue(element)
    @list << element
  end

  def dequeue
    @list.shift
  end
end
